- name: Setup editing environment
  hosts: "{{ my_host | default('all') }}"
  become: true
  become_user: "{{ my_user | default('noel') }}"
  tasks:
    - name: Install packages
      become_user: root
      when: ansible_facts['distribution'] == "RedHat"
      ansible.builtin.yum:
        name:
          - screen
          - vim
          - python3
          - python3-pip
          - git
        state: present

    - name: Delete exa
      become_user: root
      ansible.builtin.file:
        path: /opt/downloads/exa
        state: absent

    - name: Ensure files to exa files are deleted 
      when: ansible_facts['distribution'] == "RedHat"
      become_user: root
      loop:
        - name: bin
          path: /usr/local/bin/exa
        - name: man_exa1
          path: /usr/local/share/man/man1/exa.1
        - name: man_exa5
          path: /usr/local/share/man/man5/exa_colors.5
        - name: bash_completions
          path: /etc/bash_completion.d/exa.bash
      ansible.builtin.file:
        path: "{{ item['path'] }}"
        state: absent

    - name: Ensure needed python packages are installed
      ansible.builtin.pip:
        name: yamllint
        state: present
        extra_args: --user

    - name: Ensure needed directories are present
      loop: "{{ dir_list }}"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"

    - name: Ensure pathogen is downloaded
      ansible.builtin.get_url:
        url: https://tpo.pe/pathogen.vim
        dest: ~/.vim/autoload/pathogen.vim
        mode: "0644"

    - name: Ensure plugin repos are cloned
      loop: "{{ repo_list }}"
      ansible.builtin.git:
        repo: "{{ item }}"
        dest: ~/.vim/bundle/{{ item.split('/')[-1] | regex_replace('\.git$') }}

    - name: Ensure config files are copied
      loop: "{{ lookup('dict', config_files) }}"
      ansible.builtin.copy:
        src: "{{ item['value']['file'] }}"
        dest: "{{ item['value']['dest'] }}"

    - name: Ensure ~/.bashrc is configured
      ansible.builtin.blockinfile:
        path: ~/.bashrc
        block: "{{ my_bashrc }}"
        state: present
